# Generated by Django 5.0.3 on 2024-03-30 19:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('score_to_aim', models.IntegerField()),
                ('image', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('place', models.CharField(max_length=255)),
                ('time_start', models.DateTimeField()),
                ('time_end', models.DateTimeField()),
                ('reference', models.CharField(max_length=255)),
                ('reference_video', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='GettingAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventcalendar.achievement')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('surname', models.CharField(max_length=255)),
                ('role', models.IntegerField(choices=[(0, 'User'), (1, 'Manager'), (2, 'Admin')], default=0)),
                ('scores', models.IntegerField()),
                ('job', models.CharField(max_length=255)),
                ('photo', models.ImageField(upload_to='')),
                ('vk', models.CharField(blank=True, max_length=255)),
                ('telegram', models.CharField(blank=True, max_length=255)),
                ('mail', models.CharField(blank=True, max_length=255)),
                ('skype', models.CharField(blank=True, max_length=255)),
                ('phone', models.CharField(blank=True, max_length=255)),
                ('achievements', models.ManyToManyField(through='eventcalendar.GettingAchievement', to='eventcalendar.achievement')),
            ],
        ),
        migrations.AddField(
            model_name='gettingachievement',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventcalendar.user'),
        ),
        migrations.CreateModel(
            name='EventQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('answer', models.CharField(max_length=255)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventcalendar.event')),
                ('answered_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answered_user', to='eventcalendar.user')),
                ('asked_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asked_user', to='eventcalendar.user')),
            ],
        ),
        migrations.CreateModel(
            name='EventComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventcalendar.event')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='eventcalendar.user')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='managers',
            field=models.ManyToManyField(related_name='events', to='eventcalendar.user'),
        ),
        migrations.AddField(
            model_name='event',
            name='speaker',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='eventcalendar.user'),
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventcalendar.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventcalendar.user')),
            ],
        ),
        migrations.CreateModel(
            name='UsersOnEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.IntegerField()),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='eventcalendar.event')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='eventcalendar.user')),
            ],
        ),
    ]
